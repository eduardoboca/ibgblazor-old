@page "/localidades/create"
@inject IBGBlazor.Data.ApplicationDbContext DB
@using IBGBlazor.Models
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Localidade</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Localidade" OnValidSubmit="AddLocalidade" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="state" class="form-label">State:</label> 
                <InputText id="state" @bind-Value="Localidade.State" class="form-control" /> 
                <ValidationMessage For="() => Localidade.State" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="city" class="form-label">City:</label> 
                <InputText id="city" @bind-Value="Localidade.City" class="form-control" /> 
                <ValidationMessage For="() => Localidade.City" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/localidades">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Localidade Localidade { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddLocalidade()
    {
        DB.IBGE.Add(Localidade);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/localidades");
    }
}
