@page "/localidades"
@using Microsoft.AspNetCore.Components.QuickGrid
@using IBGBlazor.Models
@inject IBGBlazor.Data.ApplicationDbContext DB
@rendermode InteractiveServer

<PageTitle>Localidades</PageTitle>

<h1>Localidades</h1>

<p>
    <a href="localidades/create">Nova</a>
</p>

<QuickGrid Class="table" Items="@localidadesFilterQueryable" @ref="refgrid" Pagination="@pagination">
    <PropertyColumn Property="localidade => localidade.Id" Title="Id" Sortable="true">
        <ColumnOptions>
            <div class="search-box">
                <InputText type="search" autofocus @bind-Value="txtId" @oninput="FilterById" placeholder="Id ..." />
            </div>
        </ColumnOptions>
    </PropertyColumn>
    <PropertyColumn Property="localidade => localidade.State" Title="Estado" Sortable="true">
        <ColumnOptions>
            <div class="search-box">
                <InputText type="search" autofocus @bind-Value="txtState" @oninput="FilterByState"
                    placeholder="Estado ..." />
            </div>
        </ColumnOptions>
    </PropertyColumn>

    <PropertyColumn Property="localidade => localidade.City" Title="Cidade" Sortable="true">
        <ColumnOptions>
            <div class="search-box">
                <InputText type="search" autofocus @bind-Value="txtCity" @oninput="FilterByCity"
                    placeholder="Cidade..." />
            </div>
        </ColumnOptions>
    </PropertyColumn>


    <TemplateColumn Context="localidade">
        <a href="@($"localidades/edit?id={localidade.Id}")">Editar</a> |
        <a href="@($"localidades/delete?id={localidade.Id}")">Apagar</a>
    </TemplateColumn>
</QuickGrid>

<div class="page-size-chooser">
    Itens por página:
    <select @bind="@pagination.ItemsPerPage">
        <option>10</option>
        <option>20</option>
        <option>30</option>
    </select>
</div>
<Paginator State="@pagination" />

@code {
    IQueryable<Localidade>? localidadesQueryable;
    IQueryable<Localidade>? localidadesFilterQueryable;
    QuickGrid<Localidade>? refgrid;
    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };
    string? txtId;
    string? txtState;
    string? txtCity;

    protected override Task OnInitializedAsync()
    {
        localidadesFilterQueryable = LoadLocalidades();
        return base.OnInitializedAsync();
    }

    private IQueryable<Localidade> LoadLocalidades()
    {
        localidadesQueryable = DB.IBGE
        .AsQueryable<Localidade>();
        return localidadesQueryable;
    }

    private void FilterById(ChangeEventArgs args)
    {
        localidadesFilterQueryable = localidadesQueryable!.Where(l => l.Id.Contains(args.Value.ToString()));
    }

    private void FilterByState(ChangeEventArgs args)
    {
        localidadesFilterQueryable = localidadesQueryable!.Where(l => l.State.Contains(args.Value.ToString()));
    }
    private void FilterByCity(ChangeEventArgs args)
    {
        localidadesFilterQueryable = localidadesQueryable!.Where(l => l.City.Contains(args.Value.ToString()));
    }

}